{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentPosition","maxPosition","props","emojiWidth","images","length","frameSize","stepSize","step","handleMoveRight","setState","prevState","infinite","handleMoveLeft","this","className","style","width","transform","transition","animationDur","map","image","index","src","alt","height","type","onClick","React","Component","App","onBlur","event","target","name","value","checked","margin","display","flexDirection","placeholder","id","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b84abf7.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currentPosition: number,\n};\n\ntype Props = {\n  images: string[],\n  emojiWidth: number,\n  frameSize: number,\n  step: number,\n  animationDur: number;\n  infinite: boolean,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: State = {\n    currentPosition: 0,\n  };\n\n  maxPosition = (this.props.emojiWidth * this.props.images.length)\n  - (this.props.emojiWidth * this.props.frameSize);\n\n  stepSize = this.props.emojiWidth * this.props.step;\n\n  componentDidUpdate(): void {\n    this.maxPosition = (this.props.emojiWidth * this.props.images.length)\n    - (this.props.emojiWidth * this.props.frameSize);\n\n    this.stepSize = this.props.emojiWidth * this.props.step;\n  }\n\n  handleMoveRight = () => {\n    if (this.state.currentPosition + this.stepSize < this.maxPosition) {\n      this.setState((prevState: State) => ({\n        currentPosition: prevState.currentPosition + this.stepSize,\n      }));\n    }\n\n    if (this.state.currentPosition + this.stepSize\n        >= this.maxPosition\n        && this.state.currentPosition < this.maxPosition) {\n      this.setState({\n        currentPosition: this.maxPosition,\n      });\n    }\n\n    if (this.state.currentPosition + this.props.emojiWidth > this.maxPosition\n        && this.state.currentPosition >= this.maxPosition\n        && this.props.infinite) {\n      this.setState({\n        currentPosition: 0,\n      });\n    }\n  };\n\n  handleMoveLeft = () => {\n    if (this.state.currentPosition >= this.stepSize) {\n      this.setState((prevState: State) => ({\n        currentPosition: prevState.currentPosition\n          - this.stepSize,\n      }));\n    }\n\n    if (this.state.currentPosition < 390) {\n      this.setState({\n        currentPosition: 0,\n      });\n    }\n\n    if (this.state.currentPosition === 0 && this.props.infinite) {\n      this.setState({\n        currentPosition: this.maxPosition,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${this.props.emojiWidth * this.props.frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${this.state.currentPosition}px)`,\n              transition: `transform ${this.props.animationDur}ms`,\n              width: `${this.props.emojiWidth * this.props.images.length}px`,\n            }}\n          >\n            {this.props.images.map((image: string, index: number) => (\n              <li key={`${index + 1}`}>\n                <img\n                  src={image}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${this.props.emojiWidth}px`,\n                    height: `${this.props.emojiWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"buttonsContainer\">\n            <button type=\"button\" onClick={this.handleMoveLeft}>Prev</button>\n            <button\n              type=\"button\"\n              onClick={this.handleMoveRight}\n              data-cy=\"next\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  emojiWidth: number;\n  frameSize: number;\n  step: number;\n  animationDur: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    emojiWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDur: 1000,\n    infinite: false,\n  };\n\n  onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (event.target.name === 'emojiWidth') {\n      if (+event.target.value > 0) {\n        this.setState({\n          emojiWidth: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        frameSize: 130,\n      });\n    }\n\n    if (event.target.name === 'frameSize') {\n      if (+event.target.value > 0 && +event.target.value <= 10) {\n        this.setState({\n          frameSize: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        frameSize: 3,\n      });\n    }\n\n    if (event.target.name === 'step') {\n      if (+event.target.value > 0) {\n        this.setState({\n          step: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        step: 3,\n      });\n    }\n\n    if (event.target.name === 'animationDur') {\n      if (+event.target.value > 300) {\n        this.setState({\n          animationDur: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        animationDur: 300,\n      });\n    }\n\n    if (event.target.name === 'infinite') {\n      if (event.target.checked) {\n        this.setState({\n          infinite: true,\n        });\n\n        return;\n      }\n\n      this.setState({\n        infinite: false,\n      });\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          emojiWidth={this.state.emojiWidth}\n          frameSize={this.state.frameSize}\n          step={this.state.step}\n          animationDur={this.state.animationDur}\n          infinite={this.state.infinite}\n        />\n\n        <div style={{\n          width: '390px',\n          margin: '10px auto 0',\n        }}\n        >\n          <div style={{\n            display: 'flex',\n            width: '195px',\n            margin: '0 auto',\n            flexDirection: 'column',\n          }}\n          >\n            <input\n              type=\"number\"\n              placeholder=\"130\"\n              name=\"emojiWidth\"\n              onBlur={this.onBlur}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"3\"\n              name=\"frameSize\"\n              onBlur={this.onBlur}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"3\"\n              name=\"step\"\n              onBlur={this.onBlur}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"1000\"\n              name=\"animationDur\"\n              onBlur={this.onBlur}\n            />\n            <div>\n              <input\n                type=\"checkbox\"\n                placeholder=\"1000\"\n                name=\"infinite\"\n                id=\"infinite\"\n                onBlur={this.onBlur}\n              />\n              <label htmlFor=\"infinite\">Infinite</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}