{"version":3,"sources":["App.tsx","components/Carousel.tsx","index.tsx"],"names":["Inputs","Carousel","state","currentPosition","maxPosition","props","emojiWidth","images","length","frameSize","stepSize","step","defaultEmojiWidth","handleMoveRight","setState","prevState","infinite","handleMoveLeft","this","className","style","width","transform","transition","animationDur","map","image","index","src","alt","height","type","onClick","React","Component","App","minDuration","onBlur","event","target","name","value","checked","htmlFor","placeholder","min","max","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6948218b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  emojiWidth: number;\n  frameSize: number;\n  step: number;\n  animationDur: number;\n  infinite: boolean;\n}\n\nenum Inputs {\n  emojiWidth = 'emojiWidth',\n  frameSize = 'frameSize',\n  step = 'step',\n  animationDur = 'animationDur',\n  infinite = 'infinite',\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    emojiWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDur: 1000,\n    infinite: false,\n  };\n\n  minDuration = 300;\n\n  onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (event.target.name === Inputs.emojiWidth) {\n      if (+event.target.value > 0) {\n        this.setState({\n          emojiWidth: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        emojiWidth: 130,\n      });\n    }\n\n    if (event.target.name === Inputs.frameSize) {\n      if (+event.target.value > 0\n        && +event.target.value <= this.state.images.length) {\n        this.setState({\n          frameSize: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        frameSize: 3,\n      });\n    }\n\n    if (event.target.name === Inputs.step) {\n      if (+event.target.value > 0) {\n        this.setState({\n          step: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        step: 3,\n      });\n    }\n\n    if (event.target.name === Inputs.animationDur) {\n      if (+event.target.value > this.minDuration) {\n        this.setState({\n          animationDur: +event.target.value,\n        });\n\n        return;\n      }\n\n      this.setState({\n        animationDur: this.minDuration,\n      });\n    }\n\n    if (event.target.name === Inputs.infinite) {\n      if (event.target.checked) {\n        this.setState({\n          infinite: true,\n        });\n\n        return;\n      }\n\n      this.setState({\n        infinite: false,\n      });\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          emojiWidth={this.state.emojiWidth}\n          frameSize={this.state.frameSize}\n          step={this.state.step}\n          animationDur={this.state.animationDur}\n          infinite={this.state.infinite}\n        />\n\n        <div className=\"inputs\">\n          <div className=\"inputsWrapper\">\n            <div className=\"inputWrap\">\n              <label htmlFor=\"emojiWidth\">Emoji width: </label>\n\n              <input\n                type=\"number\"\n                placeholder=\"130\"\n                name=\"emojiWidth\"\n                min={50}\n                max={300}\n                onBlur={this.onBlur}\n                id=\"emojiWidth\"\n              />\n            </div>\n            <div className=\"inputWrap\">\n              <label htmlFor=\"frameSize\">Frame size: </label>\n\n              <input\n                type=\"number\"\n                placeholder=\"3\"\n                name=\"frameSize\"\n                min={1}\n                onBlur={this.onBlur}\n                id=\"frameSize\"\n              />\n            </div>\n            <div className=\"inputWrap\">\n              <label htmlFor=\"step\">Step: </label>\n\n              <input\n                type=\"number\"\n                placeholder=\"3\"\n                name=\"step\"\n                min={1}\n                onBlur={this.onBlur}\n                id=\"step\"\n              />\n            </div>\n            <div className=\"inputWrap\">\n              <label htmlFor=\"animationDur\">Animation duration: </label>\n\n              <input\n                type=\"number\"\n                placeholder=\"1000\"\n                name=\"animationDur\"\n                onBlur={this.onBlur}\n                id=\"animationDur\"\n              />\n            </div>\n            <div className=\"inputWrap\">\n              <input\n                type=\"checkbox\"\n                name=\"infinite\"\n                id=\"infinite\"\n                onBlur={this.onBlur}\n              />\n\n              <label htmlFor=\"infinite\">Infinite</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currentPosition: number,\n};\n\ntype Props = {\n  images: string[],\n  emojiWidth: number,\n  frameSize: number,\n  step: number,\n  animationDur: number;\n  infinite: boolean,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: State = {\n    currentPosition: 0,\n  };\n\n  maxPosition = (this.props.emojiWidth * this.props.images.length)\n  - (this.props.emojiWidth * this.props.frameSize);\n\n  stepSize = this.props.emojiWidth * this.props.step;\n\n  defaultEmojiWidth = 130;\n\n  componentDidUpdate(): void {\n    this.maxPosition = (this.props.emojiWidth * this.props.images.length)\n    - (this.props.emojiWidth * this.props.frameSize);\n\n    this.stepSize = this.props.emojiWidth * this.props.step;\n  }\n\n  handleMoveRight = () => {\n    if (this.state.currentPosition + this.stepSize < this.maxPosition) {\n      this.setState((prevState: State) => ({\n        currentPosition: prevState.currentPosition + this.stepSize,\n      }));\n    }\n\n    if (this.state.currentPosition + this.stepSize\n        >= this.maxPosition\n        && this.state.currentPosition < this.maxPosition) {\n      this.setState({\n        currentPosition: this.maxPosition,\n      });\n    }\n\n    if (this.state.currentPosition + this.props.emojiWidth > this.maxPosition\n        && this.state.currentPosition >= this.maxPosition\n        && this.props.infinite) {\n      this.setState({\n        currentPosition: 0,\n      });\n    }\n  };\n\n  handleMoveLeft = () => {\n    if (this.state.currentPosition >= this.stepSize) {\n      this.setState((prevState: State) => ({\n        currentPosition: prevState.currentPosition\n          - this.stepSize,\n      }));\n    }\n\n    if (this.state.currentPosition\n        < (this.props.emojiWidth * this.props.frameSize)) {\n      this.setState({\n        currentPosition: 0,\n      });\n    }\n\n    if (this.state.currentPosition === 0 && this.props.infinite) {\n      this.setState({\n        currentPosition: this.maxPosition,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${this.props.emojiWidth * this.props.frameSize}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${this.state.currentPosition}px)`,\n            transition: `transform ${this.props.animationDur}ms`,\n            width: `${this.props.emojiWidth * this.props.images.length}px`,\n          }}\n        >\n          {this.props.images.map((image: string, index: number) => (\n            <li key={`${index + 1}`}>\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${this.props.emojiWidth}px`,\n                  height: `${this.props.emojiWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"buttonsContainer\">\n          <button type=\"button\" onClick={this.handleMoveLeft}>Prev</button>\n          <button\n            type=\"button\"\n            onClick={this.handleMoveRight}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}